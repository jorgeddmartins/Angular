@using SmarterCover.Data.ViewModels
@using SmarterCover.Data.Domain
@using SmarterCoverLibrary.Extensions

@model QuoteViewModel

@{
    ViewBag.Title = "Create";
}

@*
    *****************************************************************************************************************************
    TODO: Add onchange event to Lead related fields to disable generate quote button until the lead change(s) have been saved.
    *****************************************************************************************************************************
*@

@using (Ajax.BeginForm("QuoteResults", "Quotes", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "pnlQuoteResults", LoadingElementId = "pnlSpinner" }, new { Id = "frmGetQuotes" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.QuoteId)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.CreatedByUserId)
    @Html.HiddenFor(model => model.Updated)
    @Html.HiddenFor(model => model.UpdatedByUserId)
    @Html.HiddenFor(model => model.LivesSelectedIndex)

    <div class="lScreen">
       <!-- <h4>Generate Life Insurance Quote</h4> -->
		<div class="leadTNav">
			<div class="LRefr_Fl">
				<span class="referenceLead">Generate Life Insurance Quote</span>
			</div>
		</div>
       @* @if (Model.Created != null && Model.Created != DateTime.MinValue)
        {
            <h6>
                <span>Created: @Model.Created.Value.ToString(Constants.UK_SHORTDATE_FORMAT_TEXT)</span>


                @if (Model.Updated != null && Model.Updated != DateTime.MinValue)
                {
                    <span style="padding-left:30px;">Modified: @Model.Updated.Value.ToString(Constants.UK_SHORTDATE_FORMAT_TEXT)</span>
                }
            </h6>
        } *@
       <!-- <div class=" row text-right"><div class="col-md-9"><small class="mandatory">denotes mandatory items</small></div></div> -->
        <div class="error invalid-feedback"><span></span></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
		
		
        <section class="costumerDetails">
			<div class="details_Left">
				<div class="costumerBoard costumerLeft">
					<span class="formBoard_Title">Customer 1<span class="updaTeDetail costDet1">Upadate Details 1<i class="fa fa-rotate-right" aria-hidden="true"></i></span></span>
					<div class="form_Fl formWhite">
						<div class="boxInp">
							@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label boxLabel" })
							@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control lead-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label mandatory boxLabel" })
							@Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control lead-control" } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label mandatory boxLabel" })
							@Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control lead-control" } })
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.DateOFBirth, htmlAttributes: new { @class = "control-label dob1 mandatory boxLabel" })
							@(Html.Kendo().DatePicker().Name("DateOFBirth")
								.Value(Model.DateOFBirth)
								.Format("dd/MM/yyyy")
								.Min(DateTime.Today.AddYears(-100))
								.Max(DateTime.Today.AddYears(-18))
								.Start(CalendarView.Century)
									.Events(e =>
								{
									e.Change("DateOfBirthChange");
								})
								.HtmlAttributes(new { @class = "form-control lead-control" })

							)
							@Html.ValidationMessageFor(model => model.DateOFBirth, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label mandatory boxLabel" })
							@*@Html.RadioButtonFor(model => model.Gender, GenderEnum.Male, new { Name = "Gender", @class = "lead-control" })@Html.Label("Male")
							@Html.RadioButtonFor(model => model.Gender, GenderEnum.Female, new { Name = "Gender", @class = "lead-control" })@Html.Label("Female")*@
							@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp boxInp10">
							@Html.LabelFor(model => model.Smoker, htmlAttributes: new { @class = "control-label mandatory boxLabel" })
							@*@Html.RadioButtonFor(model => model.Smoker, true, new { Name = "Smoker", @class = "lead-control" })@Html.Label("Yes")<br />
							@Html.RadioButtonFor(model => model.Smoker, false, new { Name = "Smoker", @class = "lead-control" })@Html.Label("No")*@
							@Html.ValidationMessageFor(model => model.Smoker, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp boxInp10">
							<label for="ANB" class="control-label boxLabel">ANB</label>
							<div id="pnlDOB">
								@Html.DisplayFor(model => model.DateOFBirth, "AgeNextBirthday")
							</div>
						</div>
					</div>
				</div>
				
				<div class="costumerBoard costumerLeft">
					<span class="formBoard_Title">Customer 2<span class="updaTeDetail costDet1">Upadate Details 2<i class="fa fa-rotate-right" aria-hidden="true"></i></span></span>
					<div class="form_Fl formWhite">
						<div class="boxInp">
							@Html.LabelFor(model => model.PartnerTitle, htmlAttributes: new { @class = "control-label boxLabel" })
							@Html.EditorFor(model => model.PartnerTitle, new { htmlAttributes = new { @class = "form-control lead-control-partner" } })
                            @Html.ValidationMessageFor(model => model.PartnerTitle, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.PartnerFirstname, htmlAttributes: new { @class = "control-label boxLabel" })
							@Html.EditorFor(model => model.PartnerFirstname, new { htmlAttributes = new { @class = "form-control lead-control-partner" } })
                            @Html.ValidationMessageFor(model => model.PartnerFirstname, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.PartnerLastname, htmlAttributes: new { @class = "control-label boxLabel" })
							@Html.TextBoxFor(model => model.PartnerLastname, new { htmlAttributes = new { @class = "form-control lead-control-partner" } })
                            @Html.ValidationMessageFor(model => model.PartnerLastname, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.PartnerDateOfBirth, htmlAttributes: new { @class = "control-label dob1 boxLabel" })
							@(Html.Kendo().DatePicker().Name("PartnerDateOfBirth")
								.Value(Model.PartnerDateOfBirth)
								.Format("dd/MM/yyyy")
								.Min(DateTime.Today.AddYears(-100))
								.Max(DateTime.Today.AddYears(-18))
								.Start(CalendarView.Century)
								.Events(e =>
								{
									e.Change("PartnerDateOfBirthChange");
								})
								.HtmlAttributes(new { @class = "form-control lead-control-partner" })

							)
							@Html.ValidationMessageFor(model => model.PartnerDateOfBirth, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp">
							@Html.LabelFor(model => model.PartnerGender, htmlAttributes: new { @class = "control-label boxLabel" })
							@*@Html.RadioButtonFor(model => model.PartnerGender, GenderEnum.Male, new { Name = "PartnerGender", @class = "radio radio-inline lead-control-partner" })@Html.Label("Male")
							@Html.RadioButtonFor(model => model.PartnerGender, GenderEnum.Female, new { Name = "PartnerGender", @class = "radio radio-inline lead-control-partner" })@Html.Label("Female")*@
							@Html.ValidationMessageFor(model => model.PartnerGender, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp boxInp10">
							@Html.LabelFor(model => model.Smoker, htmlAttributes: new { @class = "control-label boxLabel" })
							@*@Html.RadioButtonFor(model => model.PartnerSmoker, true, new { Name = "PartnerSmoker", @class = "lead-control-partner" })@Html.Label("Yes")<br />
							@Html.RadioButtonFor(model => model.PartnerSmoker, false, new { Name = "PartnerSmoker", @class = "lead-control-partner" })@Html.Label("No")*@
							@Html.ValidationMessageFor(model => model.PartnerSmoker, "", new { @class = "text-danger" })
						</div>
						<div class="boxInp boxInp10">
							<label for="PartnerANB" class="control-label boxLabel">ANB</label>
							<div id="pnlPartnerANB">
								@Html.DisplayFor(model => model.PartnerDateOfBirth, "AgeNextBirthdayNullable")
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="costumerBoard costumerRight">
				<span class="formBoard_Title"></span>
				<div class="form_Fl formWhite">
					<div class="boxInp boxInp23-35 non-WOL">
						@Html.LabelFor(model => model.ToAge, htmlAttributes: new { @class = "control-label boxLabel" })
						@Html.EditorFor(model => model.ToAge, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.ToAge, "", new { @class = "text-danger" })
					</div>
					<div class="boxInp boxInp23-35 non-WOL">
						@Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label boxLabel })
						@Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		</section>
		
		
        <div class="row spinHere">
            <div class="col-md-12">
                <div id="pnlSpinner">
                    <span class="spinner"><img src="~/Content/images/loaders/Timer.gif" /></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="container">
                    <div class="row">
                        <div id="pnlQuoteResults">

                        </div>
                        <div id="pnlHistoricQuoteResults">

                        </div>
                    </div><!--row-->
                </div><!--container-->
            </div><!--col-->
        </div><!--row-->
        <div class="row">
            <div class="col-md-12">
                <div class="text-center">
                    <span id="lblNewerQuotes"> < Newer</span>
                    <span id="lblMoreQuotes" style="color:lightgray">More</span>
                    <span id="lblOlderQuotes" title="Not yet implemented"> > Older</span>
                </div>
            </div>
        </div>
    </div>
}




<!-- Task View -->
<section class="taskSection">
	
	<div class="topTasks">
		<div class="topNav"><span class="addTasks" data-toggle="modal" data-target="#addTasksModal">Tasks</span></div>
		<div class="topNav_Floor">
			<div class="atb_Top">
				<span class="atb_Header width20">Author</span>
				<span class="atb_Header width45">Task</span>
				<span class="atb_Header width17-5">Due</span>
				<span class="atb_Header">Created</span>
			</div>
			<div class="TasksTop_Fl" id="TasksTop_Fl"></div>
		</div>
	</div>
	
	<div class="allTabs_Floor">
		<div class="headerTabs">
			<span class="HTab tabAll selectedHtb">All</span>
			<span class="HTab tabNotes">Notes</span>
			<span class="HTab Tabsms">Sms</span>
			<span class="addNote addNoteGrey"></span>
		</div>
		<div class="allTabs-Content">
			<div class="atb_Top">
				<span class="atb_Header width20">Author</span>
				<span class="atb_Header width54">Note</span>
				<span class="atb_Header">Created</span>
			</div>
			<div class="notes_Floor" id="notesFloor"></div>
		</div>
	</div>
	
	<div class="bottomTasks">
		<div class="topNav"><span class="addBttTasks">Calls</span></div>
		<div class="bottomNav_Floor">
			<div class="atb_Top">
				<span class="atb_Header width20">Caller</span>
				<span class="atb_Header width12">Extn</span>
				<span class="atb_Header width20">CallID</span>
				<span class="atb_Header width20">Number</span>
				<span class="atb_Header width27">Date</span>
			</div>
			<div class="calls_Floor" id="callsFloor"></div>
		</div>
	</div>
	
</section>


@section PageScripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/quotes-create.js"></script>
    <script>
        $(document).ready(function () {
            $('#pnlHistoricQuoteResults').load('@Url.Action("HistoricQuoteResults", "QuoteRequests", new { id = Model.Id, page = 1 })');

            $("#frmGetQuotes").on("submit", function (e) {
                $('#pnlHistoricQuoteResults').empty();
                $('#pnlHistoricQuoteResults').load('@Url.Action("HistoricQuoteResults", "QuoteRequests", new { id = Model.Id, page = 1 })');
            });
        });
    </script>
}
